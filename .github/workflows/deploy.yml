name: 🚀 Deploy FastAPI App to aaPanel with Logs

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 Checkout Repository
      uses: actions/checkout@v4

    - name: 🧠 Show Environment Info
      run: |
        echo "=== SYSTEM INFO ==="
        uname -a
        echo "Python version:"
        python3 --version || echo "Python not installed"
        echo "Repository files (first 50):"
        ls -R | head -50

    - name: 🚀 Deploy via SSH
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 2232
        script_stop: false
        debug: true
        script: |
          echo "=== 🟢 Connected to Server ==="
          cd /www/wwwroot/JHS_TCD || { echo "❌ ERROR: Path not found"; exit 1; }
          echo "✅ Entered $(pwd)"
          ls -al

          echo "=== 🧹 Fixing Ownership (ensures root can read repo) ==="
          chown -R root:root /www/wwwroot/JHS_TCD || echo "⚠️ Ownership change skipped"

          echo "=== 🔒 Marking directory safe for git ==="
          git config --global --add safe.directory /www/wwwroot/JHS_TCD

          echo "=== 🔁 Checking and Updating Repository ==="
          if [ ! -d ".git" ]; then
            echo "⚠️ No Git repo found — cloning fresh..."
            rm -rf *
            git clone https://github.com/jhsassociatesllp/JHS_Talent_Community_Desk.git .
            echo "✅ Repo cloned successfully!"
          else
            echo "✅ Repo already initialized, trying to pull..."
            git status || echo "⚠️ Git status failed, continuing..."
            git fetch origin main || { echo "❌ Git fetch failed"; git config --global --add safe.directory /www/wwwroot/JHS_TCD; exit 1; }
            git reset --hard origin/main || { echo "❌ Git reset failed"; exit 1; }
          fi

          echo "✅ Latest commit:"
          git log -1 --oneline || echo "⚠️ Could not show latest commit"

          echo "=== 🐍 Virtual Environment ==="
          if [ -d "venv" ]; then
            source venv/bin/activate
          else
            python3 -m venv venv && source venv/bin/activate
          fi
          python --version

          echo "=== 📦 Installing Dependencies ==="
          pip install --upgrade pip
          pip install -r requirements.txt || { echo "❌ Pip install failed"; exit 1; }
          echo "✅ Dependencies installed"

          echo "=== 🔁 Restarting Supervisor ==="
          supervisorctl reread || true
          supervisorctl update || true
          supervisorctl restart JHS_TCD || true

          echo "=== ✅ Deployment Complete ==="
